{
  "_args": [
    [
      {
        "raw": "karma-junit-reporter@^0.4.1",
        "scope": null,
        "escapedName": "karma-junit-reporter",
        "name": "karma-junit-reporter",
        "rawSpec": "^0.4.1",
        "spec": ">=0.4.1 <0.5.0",
        "type": "range"
      },
      "/Users/vedit/Desktop/Projects/myContacts"
    ]
  ],
  "_from": "karma-junit-reporter@>=0.4.1 <0.5.0",
  "_id": "karma-junit-reporter@0.4.2",
  "_inCache": true,
  "_location": "/karma-junit-reporter",
  "_nodeVersion": "5.6.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/karma-junit-reporter-0.4.2.tgz_1460148641531_0.27325485995970666"
  },
  "_npmUser": {
    "name": "dignifiedquire",
    "email": "dignifiedquire@gmail.com"
  },
  "_npmVersion": "3.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "karma-junit-reporter@^0.4.1",
    "scope": null,
    "escapedName": "karma-junit-reporter",
    "name": "karma-junit-reporter",
    "rawSpec": "^0.4.1",
    "spec": ">=0.4.1 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/karma-junit-reporter/-/karma-junit-reporter-0.4.2.tgz",
  "_shasum": "492a236728fe4c92aacf419fcd0110a4327e9d7f",
  "_shrinkwrap": null,
  "_spec": "karma-junit-reporter@^0.4.1",
  "_where": "/Users/vedit/Desktop/Projects/myContacts",
  "author": {
    "name": "Vojta Jina",
    "email": "vojta.jina@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/karma-runner/karma-junit-reporter/issues"
  },
  "contributors": [
    {
      "name": "Vojta Jina",
      "email": "vojta.jina@gmail.com"
    },
    {
      "name": "Friedel Ziegelmayer",
      "email": "dignifiedquire@gmail.com"
    },
    {
      "name": "Simen Bekkhus",
      "email": "sbekkhus91@gmail.com"
    },
    {
      "name": "Friedel Ziegelmayer",
      "email": "friedel.ziegelmayer@gmail.com"
    },
    {
      "name": "Janek Lasocki-Biczysko",
      "email": "iamjanek@gmail.com"
    },
    {
      "name": "Craig Vermeer",
      "email": "craig@vermeers.net"
    },
    {
      "name": "Janek Lasocki-Biczysko",
      "email": "j.lasocki-biczysko@intrallect.com"
    },
    {
      "name": "John Haugeland",
      "email": "stonecypher@gmail.com"
    },
    {
      "name": "Kira Cheung",
      "email": "killercentury@gmail.com"
    },
    {
      "name": "Maksim Ryzhikov",
      "email": "rv.maksim@gmail.com"
    },
    {
      "name": "Martin Leonhartsberger",
      "email": "mschrott@splunk.com"
    },
    {
      "name": "Matthias Oßwald",
      "email": "matz3@users.noreply.github.com"
    },
    {
      "name": "Mike Ng",
      "email": "mike.ng@optimizely.com"
    },
    {
      "name": "Nikita Shirin",
      "email": "shirin.nikita@gmail.com"
    },
    {
      "name": "Phillip Johnsen",
      "email": "johphi@gmail.com"
    },
    {
      "name": "Rob Richardson",
      "email": "robrich@robrich.org"
    },
    {
      "name": "Sylvain Hamel",
      "email": "sylvainhamel0@gmail.com"
    },
    {
      "name": "Trey Hyde",
      "email": "thyde@centraldesktop.com"
    },
    {
      "name": "Vladimir Alaev",
      "email": "scff@yandex-team.ru"
    },
    {
      "name": "budde377",
      "email": "budde377@gmail.com"
    },
    {
      "name": "mon.asuncion",
      "email": "mon@englishcentral.com"
    },
    {
      "name": "Adriaan Thomas",
      "email": "athomas@xebia.com"
    },
    {
      "name": "sylvain-hamel",
      "email": "sylvainhamel0@gmail.com"
    },
    {
      "name": "Alex Alvarez",
      "email": "dominalexican@gmail.com"
    },
    {
      "name": "Brian Donovan",
      "email": "me@brian-donovan.com"
    },
    {
      "name": "Brian Meneses",
      "email": "brian.meneses@gmail.com"
    },
    {
      "name": "Cesar Andreu",
      "email": "cesarandreu@gmail.com"
    },
    {
      "name": "David Pärsson",
      "email": "david@parsson.se"
    },
    {
      "name": "Derek Schaller",
      "email": "dschaller@lyft.com"
    }
  ],
  "dependencies": {
    "path-is-absolute": "^1.0.0",
    "xmlbuilder": "3.1.0"
  },
  "description": "A Karma plugin. Report results in junit xml format.",
  "devDependencies": {
    "chai": "^3.5.0",
    "eslint": "^1.2.1",
    "eslint-config-standard": "^4.1.0",
    "eslint-plugin-standard": "^1.3.1",
    "grunt": "^0.4.1",
    "grunt-bump": "^0.5.0",
    "grunt-cli": "^0.1.13",
    "grunt-conventional-changelog": "^4.1.0",
    "grunt-conventional-github-releaser": "^0.4.0",
    "grunt-eslint": "^17.1.0",
    "grunt-npm": "^0.0.2",
    "grunt-simple-mocha": "^0.4.1",
    "load-grunt-tasks": "^3.2.0",
    "mocha": "^2.4.5",
    "proxyquire": "^1.7.4",
    "sinon": "^1.17.3",
    "sinon-chai": "^2.8.0"
  },
  "directories": {},
  "dist": {
    "shasum": "492a236728fe4c92aacf419fcd0110a4327e9d7f",
    "tarball": "https://registry.npmjs.org/karma-junit-reporter/-/karma-junit-reporter-0.4.2.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "7c61759a38b77acb620e66239d75aee08ae2b971",
  "homepage": "https://github.com/karma-runner/karma-junit-reporter#readme",
  "keywords": [
    "junit",
    "karma-plugin",
    "karma-reporter"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "vojtajina",
      "email": "vojta.jina+npm@gmail.com"
    },
    {
      "name": "zzo",
      "email": "mark@zzo.com"
    },
    {
      "name": "dignifiedquire",
      "email": "dignifiedquire@gmail.com"
    }
  ],
  "name": "karma-junit-reporter",
  "optionalDependencies": {},
  "peerDependencies": {
    "karma": ">=0.9"
  },
  "readme": "# karma-junit-reporter\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/karma-runner/karma-junit-reporter)\n [![npm version](https://img.shields.io/npm/v/karma-junit-reporter.svg?style=flat-square)](https://www.npmjs.com/package/karma-junit-reporter) [![npm downloads](https://img.shields.io/npm/dm/karma-junit-reporter.svg?style=flat-square)](https://www.npmjs.com/package/karma-junit-reporter)\n\n[![Build Status](https://img.shields.io/travis/karma-runner/karma-junit-reporter/master.svg?style=flat-square)](https://travis-ci.org/karma-runner/karma-junit-reporter) [![Dependency Status](https://img.shields.io/david/karma-runner/karma-junit-reporter.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-junit-reporter) [![devDependency Status](https://img.shields.io/david/dev/karma-runner/karma-junit-reporter.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-junit-reporter#info=devDependencies)\n\n> Reporter for the JUnit XML format.\n\n## Installation\n\nThe easiest way is to keep `karma-junit-reporter` as a devDependency in your `package.json`. Just run\n\n```bash\nnpm install karma-junit-reporter --save-dev\n```\n\nto let npm automatically add it there.\n\n## Configuration\n\n```js\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    reporters: ['progress', 'junit'],\n\n    // the default configuration\n    junitReporter: {\n      outputDir: '', // results will be saved as $outputDir/$browserName.xml\n      outputFile: undefined, // if included, results will be saved as $outputDir/$browserName/$outputFile\n      suite: '', // suite will become the package name attribute in xml testsuite element\n      useBrowserName: true, // add browser name to report and classes names\n      nameFormatter: undefined, // function (browser, result) to customize the name attribute in xml testcase element\n      classNameFormatter: undefined // function (browser, result) to customize the classname attribute in xml testcase element,\n      properties: {} // key value pair of properties to add to the <properties> section of the report\n    }\n  });\n};\n```\n\nYou can pass list of reporters as a CLI argument too:\n```bash\nkarma start --reporters junit,dots\n```\n\n## Produce test result with schema acceptable in sonar\n\nTo make this possible, it's required to make the classnames of each tests to match its file name.\n\nFor Example:\n```js\ndescribe('analytics.AnalyticsModule_test', function(){\n\n    var analytics;\n    beforeEach(module('ECApp'));\n    beforeEach(module('angularytics'));\n    beforeEach(module('AnalyticsModule'));\n...\n```\n\nshould have a file name AnalyticsModule_test.js\n\nThis will produce test result with schema acceptable in sonar.\n\nGrunt file reporters property example:\n```js\nreporters: ['junit', 'coverage', 'progress'],\njunitReporter: {\n    outputDir: $junitResults,\n    suite: 'models'\n},\ncoverageReporter: {\n    type: 'lcov',\n    dir: $coverageOutputDir,\n    subdir: '.'\n},\npreprocessors: {\n    'src/main/webapp/public/js/ec3.3/**/*.js': 'coverage',\n    'src/main/webapp/public/js/ec3/**/*.js': 'coverage'\n},\nplugins: [\n    'karma-jasmine',\n    'karma-phantomjs-launcher',\n    'ec-karma-junit-reporter23',\n    'karma-coverage'\n]\n```\n\nSonar property example:\n```js\nsonar.projectName=js\nsonar.sources=site-main-php/src/main/webapp/public/js\nsonar.projectBaseDir=.\nsonar.exclusions=site-main-php/src/main/webapp/public/js/lib/*.js,site-main-php/src/main/webapp/public/js/tests/**/*.php,site-main-php/src/main/webapp/public/js/tests/**/*.js,site-main-php/src/main/webapp/public/js/ec3.3/vendor/**\nsonar.javascript.lcov.reportPath=site-main-php/target/coverage/lcov.info\nsonar.javascript.jstestdriver.reportsPath=site-main-php/target/surefire-reports/\nsonar.tests=site-main-php/src/main/webapp/public/js/tests\n```\n\nExample junit xml report:\n```xml\n<?xml version=\"1.0\"?>\n<testsuite name=\"PhantomJS 1.9.8 (Linux)\" package=\"models\" timestamp=\"2015-03-10T13:59:23\" id=\"0\" hostname=\"admin\" tests=\"629\" errors=\"0\" failures=\"0\" time=\"11.452\">\n  <properties>\n    <property name=\"browser.fullName\" value=\"Mozilla/5.0 (Unknown; Linux x86_64) AppleWebKit/534.34 (KHTML, like Gecko) PhantomJS/1.9.8 Safari/534.34\"/>\n  </properties>\n <testcase name=\"(C.2) Checks if an empty object is returned when error 404 is encountered\" time=\"0.01\" classname=\"PhantomJS_1_9_8_(Linux).models.AnalyticsModule_test\"/>\n <testcase name=\"(C.3) Checks if an empty array is returned when error 405 is encountered\" time=\"0.013\" classname=\"PhantomJS_1_9_8_(Linux).models.AnalyticsModule_test\"/>\n</testsuite>\n...\n```\n----\n\nFor more information on Karma see the [homepage].\n\n\n[homepage]: http://karma-runner.github.com\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/karma-runner/karma-junit-reporter.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "0.4.2"
}
